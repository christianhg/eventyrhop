package {		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.net.NetConnection;	import flash.net.Responder;	import utilities.Functions;		public class Lock extends MovieClip	{			[Embed(source="assets/images/lockBg.png")]		private var LockBgImage:Class;				[Embed(source="assets/images/code.png")]		private var CodeImage:Class;				[Embed(source="assets/images/back.png")]		private var BackImage:Class;				[Embed(source="assets/images/codeInput.png")]		private var CodeInputBgImage:Class;				private var _lockBgImage:DisplayObject;		private var _lockBg:Sprite;				private var _codeImage:DisplayObject;		private var _code:Sprite;				private var _backImage:DisplayObject;		private var _back:Sprite;				private var _codeInputBgImage:DisplayObject;		private var _codeInputBg:Sprite;				private var _codeInput:TextField;		private var _codeInputTextFormat:TextFormat;				private var _netConnection:NetConnection; 		private var _responder:Responder; 		public function Lock() 		{			buildObjects();			placeObjects();		}				private function buildObjects():void		{			_lockBgImage = new LockBgImage();			_lockBg = new Sprite();			_lockBg.addChild(_lockBgImage);						_codeImage = new CodeImage();			_code = new Sprite();			_code.addEventListener(MouseEvent.CLICK, addCodeClick);			_code.addChild(_codeImage);			_code.x = 0; //128;			_code.y = 180; //520;						_codeInputBgImage = new CodeInputBgImage();			_codeInputBg = new Sprite();			_codeInputBg.addChild(_codeInputBgImage);			_codeInputBg.x = 50;			_codeInputBg.y = 230;						_backImage = new BackImage();			_back = new Sprite();			_back.addEventListener(MouseEvent.CLICK, backClick);			_back.addChild(_backImage);			_back.x = 128;			_back.y = 620;						_codeInputTextFormat = new TextFormat();			_codeInputTextFormat.align = "center";			_codeInputTextFormat.color = 0xFFFFFF;			_codeInputTextFormat.size = 35;						_codeInput = new TextField();			_codeInput.defaultTextFormat = _codeInputTextFormat;			_codeInput.type = "input";			_codeInput.width = 370;			_codeInput.height = 40;			_codeInput.x = 55;			_codeInput.y = 235;			_codeInput.restrict = "A-Z";		}				private function placeObjects():void		{			addChild(_lockBg);			addChild(_code);			addChild(_back);			addChild(_codeInputBg);			addChild(_codeInput);		}				private function backClick(e:MouseEvent):void 		{			parent.removeChild(this);		}				private function addCodeClick(e:MouseEvent):void 		{			if(_codeInput.length != 0) {				var code:String = _codeInput.text;				_codeInput.text = "";				_netConnection = new NetConnection();				_responder = new Responder(handleResult, onFault);						_netConnection.connect("http://hca.starbeast.dk/amfphp/");							_netConnection.call("Code/checkCode", _responder, code, (parent as MovieClip).phoneId);								/*switch(_codeInput.text)				{					case("SVANE"): //Duckling						(parent as MovieClip).unlockGame("duckling");						parent.parent.removeChild(parent);						break;					case("MADRAS"): //Princess						(parent as MovieClip).unlockGame("princess");						parent.parent.removeChild(parent);						break;					case("TREFORK"): //Mermaid						(parent as MovieClip).unlockGame("mermaid");						parent.parent.removeChild(parent);						break;					default:						break;				}				_codeInput.text = "";*/			}		}				private function handleResult(result:Object):void {			if(result.toString() != "") {				(parent as MovieClip).unlockGame(result.toString());				parent.parent.removeChild(parent);			}		}				private function onFault(e:*):void		{			_codeInput.text = "FORBINDELSESFEJL";			for(var s:String in e) {				trace(s+" "+e[s]);			}		}	}}