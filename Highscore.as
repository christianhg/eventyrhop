package {		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.net.NetConnection;	import flash.net.Responder;	import flash.text.TextFormat;	import flash.text.TextField;		public class Highscore extends MovieClip 	{			[Embed(source="assets/images/highscoreBg.png")]		private var HighscoreBgImage:Class;			[Embed(source="assets/images/back.png")]		private var BackImage:Class;				private var _highscoreBgImage:DisplayObject;		private var _highscoreBg:Sprite				private var _backImage:DisplayObject;		private var _back:Sprite;				private var netConnection:NetConnection; 		private var responder:Responder;				private var _highscoreOutput:TextField;		private var _highscoreOutputTextFormat:TextFormat;				public function Highscore() 		{			buildObjects();			placeObjects();		}				private function buildObjects():void		{			_highscoreBgImage = new HighscoreBgImage();			_highscoreBg = new Sprite();			_highscoreBg.addChild(_highscoreBgImage);						_backImage = new BackImage();			_back = new Sprite();			_back.addEventListener(MouseEvent.CLICK, backClick);			_back.addChild(_backImage);			_back.x = 128;			_back.y = 620;						_highscoreOutputTextFormat = new TextFormat();			_highscoreOutputTextFormat.color = 0xFFFFFF;			_highscoreOutputTextFormat.size = 16;						_highscoreOutput = new TextField();			_highscoreOutput.defaultTextFormat = _highscoreOutputTextFormat;			_highscoreOutput.condenseWhite = true;			_highscoreOutput.multiline = true;			_highscoreOutput.width = 360;			_highscoreOutput.height = 360;			_highscoreOutput.x = 50;			_highscoreOutput.y = 210;		}				private function placeObjects():void		{			addChild(_highscoreBg);			addChild(_back);			addChild(_highscoreOutput);		}				public function getHighscore():void		{			netConnection = new NetConnection();			responder = new Responder(handleResult, onFault);			netConnection.connect("http://hca.starbeast.dk/amfphp/");			netConnection.call("Highscore/getHighscore", responder);			_highscoreOutput.text = "Henter highscoreliste...";		}				private function handleResult(e:Array):void		{			var n:int = 1;			_highscoreOutput.text = "";			for (var i in e) {				//trace(e+" "+e[i]);				_highscoreOutput.appendText(n + ". "); 				for (var j in e[i]) {					_highscoreOutput.appendText(e[i][j] + " ");					//trace(j+" "+e[i][j]);				}				_highscoreOutput.appendText("\n"); 				n++;			}		}				private function onFault(e:*):void		{			for (var s:String in e) trace(s+" "+e[s]);		}				private function backClick(e:MouseEvent):void 		{			parent.removeChild(this);		}	}}