package fairytales {		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.ui.Keyboard;	import flash.events.KeyboardEvent;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.net.NetConnection;	import flash.net.Responder;	import utilities.Functions;	public class AddHighscoreDialog extends MovieClip {				[Embed(source="assets/images/addHighscoreBg.png")]		private var AddHighscoreBgImage:Class;				[Embed(source="assets/images/addHighscore.png")]		private var AddHighscoreImage:Class;				[Embed(source="assets/images/highscoreHeader.png")]		private var HighscoreHeaderImage:Class;				[Embed(source="assets/images/highscoreInput.png")]		private var HighscoreInputBgImage:Class;				[Embed(source="assets/images/back.png")]		private var BackImage:Class;				private var _addHighscoreBgImage:DisplayObject;		private var _addHighscoreBg:Sprite;				private var _addHighscoreImage:DisplayObject;		private var _addHighscore:Sprite;				private var _highscoreHeaderImage:DisplayObject;		private var _highscoreHeader:Sprite;				private var _highscoreInputBgImage:DisplayObject;		private var _highscoreInputBg:Sprite;				private var _backImage:DisplayObject;		private var _back:Sprite;				private var _highscoreInput:TextField;		private var _highscoreInputTextFormat:TextFormat;				private var _netConnection:NetConnection; 		private var _responder:Responder; 				private var _score:Number;		private var _game:String;		public function AddHighscoreDialog(score:Number, game:String) {			_score = score;			_game = Functions.translateGame(game);			buildObjects();			placeObjects();		}				private function buildObjects():void		{			_addHighscoreBgImage = new AddHighscoreBgImage();			_addHighscoreBg = new Sprite();			_addHighscoreBg.addChild(_addHighscoreBgImage);						_addHighscoreImage = new AddHighscoreImage();			_addHighscore = new Sprite();			_addHighscore.addEventListener(MouseEvent.CLICK, addHighscoreClick);			_addHighscore.addChild(_addHighscoreImage);			_addHighscore.x = 128;			_addHighscore.y = 320;						_highscoreHeaderImage = new HighscoreHeaderImage();			_highscoreHeader = new Sprite();			_highscoreHeader.addChild(_highscoreHeaderImage);			_highscoreHeader.x = 69;			_highscoreHeader.y = 160;						_highscoreInputBgImage = new HighscoreInputBgImage();			_highscoreInputBg = new Sprite();			_highscoreInputBg.addChild(_highscoreInputBgImage);			_highscoreInputBg.x = 50;			_highscoreInputBg.y = 230;						_highscoreInputTextFormat = new TextFormat();			_highscoreInputTextFormat.align = "center";			_highscoreInputTextFormat.color = 0xFFFFFF;			_highscoreInputTextFormat.size = 35;						_highscoreInput = new TextField();			_highscoreInput.defaultTextFormat = _highscoreInputTextFormat;			_highscoreInput.type = "input";			_highscoreInput.width = 370;			_highscoreInput.height = 35;			_highscoreInput.x = 55;			_highscoreInput.y = 235;			_highscoreInput.restrict = "A-Z";			_highscoreInput.maxChars = 5;						_backImage = new BackImage();			_back = new Sprite();			_back.addEventListener(MouseEvent.CLICK, backClick);			_back.addChild(_backImage);			_back.x = 128;			_back.y = 520;		}				private function placeObjects():void		{			addChild(_addHighscoreBg);			addChild(_addHighscore);			addChild(_highscoreHeader);			addChild(_highscoreInputBg);			addChild(_highscoreInput);			addChild(_back);		}				private function backClick(e:MouseEvent):void 		{			parent.removeChild(this);		}				private function addHighscoreClick(e:MouseEvent):void 		{			if(_highscoreInput.length != 0 && (this.parent as MovieClip).gamePlaying) {				(this.parent as MovieClip).gamePlaying = false;				_netConnection = new NetConnection();				_responder = new Responder(handleResult, onFault);						_netConnection.connect("http://hca.starbeast.dk/amfphp/");							_netConnection.call("Highscore/insertHighscore", _responder, _highscoreInput.text, _score, _game, (this.parent.parent as MovieClip).phoneId);			}		}				private function handleResult(result:Object):void{			trace(result.toString());			if(result) {				(this.parent.parent as MovieClip).removeChild((this.parent.parent as MovieClip).currentGame);			} else {				_highscoreInput.text = "FORBINDELSESFEJL";				}		}				private function onFault(e:*):void		{			_highscoreInput.text = "FORBINDELSESFEJL";			for(var s:String in e) {				trace(s+" "+e[s]);			}		}	}	}